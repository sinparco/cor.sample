

#### Sorting ####
my.numbers <- c(4, 0, -5, 3, -4, -1, 1, -3, 2, -2)
print(my.numbers)

my.numbers.sorted <- sort(my.numbers)
print(my.numbers.sorted)

#Excluding the end values
lower.bound <- my.numbers.sorted[2]
upper.bound <- my.numbers.sorted[9]

#Creating a "Null Hypothesis" Sampling Disribution
library(learnSampling)
samples.rho.zero <- get_cor_samples(rho=0 ,n=100, number.of.samples=10000, number.of.decimals =4)

mean(samples.rho.zero$r)
sorted.samples.rho.zero <- sort_samples_by_r(samples.rho.zero)
head(sorted.samples.rho.zero, 25)
tail(sorted.samples.rho.zero, 25)

lower.bound <- sorted.amples.rho.zero[251, ]
upper.bound <- sorted.samples.rho.zero[9750, ]
#print(lower.bound)
number.more.extreme.ond.side <- sum(sorted.samples.rho.zero$r>.21)
print(number.more.extreme.ond.side)

#COnfirmation
cor.test(example1$SelfEsteem, example1$Height)
cor.test(example2$SelfEsteem, example2$Height)